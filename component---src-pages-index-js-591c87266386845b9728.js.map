{"version":3,"file":"component---src-pages-index-js-591c87266386845b9728.js","mappings":"mIAGAA,EAAAA,OAAqB,EAQrB,IAsBIC,EAtBW,SAAkBC,EAAUC,QACnB,IAAlBA,IACFA,EAAgB,SAGlB,IAAIC,EAAUC,SAASC,cAAcJ,GAErC,QAAIE,IACFA,EAAQG,eAAe,CACrBC,SAAU,SACVC,MAAON,KAEF,IAWXH,EAAAA,EAAqBC,G,8DCiCrB,UAxBkB,SAAC,GAAc,IAAZS,EAAW,EAAXA,KACbC,EAAcD,EAAKE,mBAAmBC,MAAMC,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACjDC,EAAaN,EAAKO,QAAQJ,MAAMK,WACpC,SAAAC,GAAK,OAAIA,EAAMJ,KAAKK,eAAiBL,EAAKI,SAE5C,OAAO,OAAP,UACKJ,EADL,CAEEI,MAAOT,EAAKO,QAAQJ,MAAMG,GAAYD,UAI1C,OACE,gCACE,gBAAC,KAAD,CAAKM,MAAOX,EAAKY,QAAQT,MAAM,GAAGE,KAAKQ,aAAaF,QACpD,gBAAC,KAAD,CACEA,MAAOX,EAAKY,QAAQT,MAAM,GAAGE,KAAKQ,aAAaF,MAC/CG,YAAad,EAAKY,QAAQT,MAAM,GAAGE,KAAKQ,aAAaC,YACrDC,QAAS,kBAAMC,EAAAA,EAAAA,GAAS,mBAE1B,gBAAC,KAAD,CAAaf,YAAaA","sources":["webpack://gatsby-starter-default/./node_modules/gatsby-plugin-smoothscroll/index.js","webpack://gatsby-starter-default/./src/pages/index.js"],"sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\n/**\n * Smooth scrolling onClick event handler\n * @param {string} selector argument will be passed to `querySelector`, usually an HTML id\n * @param {string} [blockPosition='start'] argument will be used to determine position where will be scrolled to (start, center, end, nearest)\n * @returns {boolean} false if `document.querySelector` doesn't find a match, otherwise true\n */\nvar scrollTo = function scrollTo(selector, blockPosition) {\n  if (blockPosition === void 0) {\n    blockPosition = 'start';\n  }\n\n  var element = document.querySelector(selector);\n\n  if (element) {\n    element.scrollIntoView({\n      behavior: 'smooth',\n      block: blockPosition\n    });\n    return true;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    console.warn(\"gatsby-plugin-smoothscroll:\\n The selector: '%s' wasn't found in the document.\\n Make sure you pass in a valid CSS selector string.\", selector);\n  }\n\n  return false;\n};\n\nvar _default = scrollTo;\nexports[\"default\"] = _default;","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\nimport { Jumbo, Suggestions, SEO } from \"../components\"\nimport scrollTo from \"gatsby-plugin-smoothscroll\"\n\nexport const query = graphql`\n  query GET_DATA {\n    allSite {\n      edges {\n        node {\n          siteMetadata {\n            description\n            title\n          }\n        }\n      }\n    }\n    allSuggestionsJson {\n      edges {\n        node {\n          id\n          name\n          autor\n          image\n          category\n        }\n      }\n    }\n    allFile(filter: { sourceInstanceName: { eq: \"images\" } }) {\n      edges {\n        node {\n          relativePath\n          childImageSharp {\n            fluid(maxWidth: 1000) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nconst IndexPage = ({ data }) => {\n  const suggestions = data.allSuggestionsJson.edges.map(({ node }) => {\n    const imageIndex = data.allFile.edges.findIndex(\n      image => image.node.relativePath === node.image\n    )\n    return {\n      ...node,\n      image: data.allFile.edges[imageIndex].node,\n    }\n  })\n\n  return (\n    <>\n      <SEO title={data.allSite.edges[0].node.siteMetadata.title} />\n      <Jumbo\n        title={data.allSite.edges[0].node.siteMetadata.title}\n        description={data.allSite.edges[0].node.siteMetadata.description}\n        onClick={() => scrollTo(\"#suggestions\")}\n      />\n      <Suggestions suggestions={suggestions} />\n    </>\n  )\n}\n\nexport default IndexPage\n"],"names":["exports","_default","selector","blockPosition","element","document","querySelector","scrollIntoView","behavior","block","data","suggestions","allSuggestionsJson","edges","map","node","imageIndex","allFile","findIndex","image","relativePath","title","allSite","siteMetadata","description","onClick","scrollTo"],"sourceRoot":""}